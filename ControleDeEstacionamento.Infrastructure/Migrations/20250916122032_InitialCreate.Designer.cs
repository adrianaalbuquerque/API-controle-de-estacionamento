// <auto-generated />
using System;
using ControleDeEstacionamento.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleDeEstacionamento.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916122032_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleDeEstacionamento.Domain.Models.Carro", b =>
                {
                    b.Property<string>("Placa")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.HasKey("Placa");

                    b.ToTable("carro");
                });

            modelBuilder.Entity("ControleDeEstacionamento.Domain.Models.EntradaSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PlacaCarro")
                        .IsRequired()
                        .HasColumnType("character varying(6)");

                    b.Property<decimal>("ValorAPagar")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PlacaCarro");

                    b.ToTable("entrada_saida");
                });

            modelBuilder.Entity("ControleDeEstacionamento.Domain.Models.PrecoEstacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ValorHoraAdicional")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorHoraInicial")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("preco_estacionamento");
                });

            modelBuilder.Entity("ControleDeEstacionamento.Domain.Models.EntradaSaida", b =>
                {
                    b.HasOne("ControleDeEstacionamento.Domain.Models.Carro", "Carro")
                        .WithMany("EntradasSaidas")
                        .HasForeignKey("PlacaCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");
                });

            modelBuilder.Entity("ControleDeEstacionamento.Domain.Models.Carro", b =>
                {
                    b.Navigation("EntradasSaidas");
                });
#pragma warning restore 612, 618
        }
    }
}
